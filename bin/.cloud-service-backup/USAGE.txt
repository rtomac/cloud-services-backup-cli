Runs a backup operation for data in the specified cloud service.

Usage:
  cloud-service-backup <service> <operation> <user> [<args>...]
  cloud-service-backup help
  cloud-service-backup <service> help

Services:
  gmail
  google-calendar
  google-contacts
  google-drive
  google-photos
  dropbox
  github
  bitbucket

Operations:
  setup     For an interactive setup of that service for the specified
            user. This will be invoked automatically when running "copy"
            or "sync", but this subcommand allows it to be run (or re-run)
            in isolation.
  copy      Non-destructive copy from remote service to local disk.
            i.e. Copy new and modified files/data, don't remove anything.
  sync      Full one-way synchronization from remote service to local disk.
            i.e. Local will match remote files/data on completion.
  help      See usage specific to that service.

Environment variables:
  CLOUD_BACKUP_CONFD
            Required. The top-level directory into which
            configuration data for all services will be
            organized into sub-folders and saved.
  CLOUD_BACKUP_DATAD
            Required. The top-level directory into which
            backup data for all services will be will be
            organized into sub-folders and saved.
  GOOGLE_OAUTH_CLIENT_ID
            Optional. For Google services, if using a custom/personal
            OAuth app for auth tokens.
  GOOGLE_OAUTH_CLIENT_SECRET
            Optional. Client secret for client ID above.

Note: A "copy" operation is recommended for daily automated backups.
A "sync" operation is recommended for less periodic and/or manual
backups. This approach helps protect against accidental or malicious
deletion of files within a cloud service. If this happens, a daily
automated "copy" would preserve those local files. A less periodic
and/or manual "sync" could be run when the state of your data in the
cloud service is in a known good state.

Note: Each command should be run interactively the first time (for
authentication, etc.) and can be run unattended after that. Use
the "setup" operation to invoke that.
